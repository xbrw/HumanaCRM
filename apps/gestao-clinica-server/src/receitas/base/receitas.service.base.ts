/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Receitas as PrismaReceitas } from "@prisma/client";

export class ReceitasServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ReceitasCountArgs, "select">): Promise<number> {
    return this.prisma.receitas.count(args);
  }

  async receitasItems<T extends Prisma.ReceitasFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ReceitasFindManyArgs>
  ): Promise<PrismaReceitas[]> {
    return this.prisma.receitas.findMany<Prisma.ReceitasFindManyArgs>(args);
  }
  async receitas<T extends Prisma.ReceitasFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ReceitasFindUniqueArgs>
  ): Promise<PrismaReceitas | null> {
    return this.prisma.receitas.findUnique(args);
  }
  async createReceitas<T extends Prisma.ReceitasCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ReceitasCreateArgs>
  ): Promise<PrismaReceitas> {
    return this.prisma.receitas.create<T>(args);
  }
  async updateReceitas<T extends Prisma.ReceitasUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ReceitasUpdateArgs>
  ): Promise<PrismaReceitas> {
    return this.prisma.receitas.update<T>(args);
  }
  async deleteReceitas<T extends Prisma.ReceitasDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ReceitasDeleteArgs>
  ): Promise<PrismaReceitas> {
    return this.prisma.receitas.delete(args);
  }
}
