/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Despesas as PrismaDespesas } from "@prisma/client";

export class DespesasServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.DespesasCountArgs, "select">): Promise<number> {
    return this.prisma.despesas.count(args);
  }

  async despesasItems<T extends Prisma.DespesasFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.DespesasFindManyArgs>
  ): Promise<PrismaDespesas[]> {
    return this.prisma.despesas.findMany<Prisma.DespesasFindManyArgs>(args);
  }
  async despesas<T extends Prisma.DespesasFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.DespesasFindUniqueArgs>
  ): Promise<PrismaDespesas | null> {
    return this.prisma.despesas.findUnique(args);
  }
  async createDespesas<T extends Prisma.DespesasCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DespesasCreateArgs>
  ): Promise<PrismaDespesas> {
    return this.prisma.despesas.create<T>(args);
  }
  async updateDespesas<T extends Prisma.DespesasUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DespesasUpdateArgs>
  ): Promise<PrismaDespesas> {
    return this.prisma.despesas.update<T>(args);
  }
  async deleteDespesas<T extends Prisma.DespesasDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.DespesasDeleteArgs>
  ): Promise<PrismaDespesas> {
    return this.prisma.despesas.delete(args);
  }
}
